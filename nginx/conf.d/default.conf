# Chemin où les fichiers de cache seront stockés sur le système de fichiers.
proxy_cache_path /var/cache/nginx
                    # Définition d'une zone de cache nommée "NginxCache" avec une taille de 20 Mo en mémoire pour indexer les clés.
                    keys_zone=NginxCache:20m
                    # Temps d'inactivité (sans accès) avant qu'un élément soit supprimé du cache (60 minutes).
                    inactive=60m
                    # Niveaux de sous-répertoires pour l'organisation des fichiers de cache sur le disque (1 niveau avec 2 sous-répertoires).
                    levels=1:2
                    # Taille maximale du cache sur le disque (10 Go).
                    max_size=10g;

# Configuration d'un groupe de serveurs "upstream" nommé "demo" pour gérer la mise en commun de serveurs.
upstream demo {
    # Définition d'un serveur de backend écoutant sur l'adresse "web" et le port 8000.
    server web:8000;
}

# Définition du bloc de serveur principal qui écoute sur le port 80.
server {
    listen 80;

    # Configuration de la localisation racine (/) pour rediriger les requêtes vers le groupe de serveurs "demo".
    location / {
        # Redirection des requêtes vers le backend "demo".
        proxy_pass http://demo;
        # Ajout de l'adresse IP du client dans l'en-tête HTTP X-Forwarded-For.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Utilisation de l'en-tête "Host" d'origine de la requête client.
        proxy_set_header Host $host;
        # Activation du cache nommé "NginxCache" pour cette localisation.
        proxy_cache NginxCache;
        # proxy_cache_min_uses 5; # (Décommenter pour cacher uniquement les ressources accédées au moins 5 fois).

        # Limitation du cache aux requêtes GET pour économiser l'espace de cache.
        proxy_cache_methods GET;
        # Durée de validité du cache pour les réponses 200 (succès) et 400 (erreur client).
        proxy_cache_valid 200 10m;
        proxy_cache_valid 400 5m;

        # Ignore l'en-tête "Vary" pour simplifier la mise en cache.
        proxy_ignore_headers Vary;
        # Contourne le cache si un cookie "sessionid" est présent (utile pour les utilisateurs connectés).
        proxy_cache_bypass $cookie_sessionid;

        # Ajoute un en-tête HTTP indiquant l'état du cache (HIT, MISS, BYPASS).
        add_header X-Proxy-Cache $upstream_cache_status;
    }

    # Configuration de la localisation pour servir les fichiers statiques depuis un dossier local.
    location /static/ {
        # Utilisation de l'alias pour mapper les requêtes vers le dossier local "/home/app/staticfiles/".
        alias /home/app/staticfiles/;
    }

    # Bloc de configuration pour la localisation /p1
    location /p1 {
        # Redirection des requêtes vers le backend "demo".
        proxy_pass http://demo;
        # Ajout de l'adresse IP du client dans l'en-tête HTTP X-Forwarded-For.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Utilisation de l'en-tête "Host" d'origine de la requête client.
        proxy_set_header Host $host;
        # Contourne le cache pour cette localisation si un en-tête "cache_bypass" est présent.
        proxy_cache_bypass $http_cache_bypass;
        # Désactive le cache pour cette localisation spécifique.
        proxy_cache off;

        # Ajoute un en-tête HTTP indiquant l'état du cache (HIT, MISS, BYPASS).
        add_header X-Proxy-Cache $upstream_cache_status;    
    }
}
